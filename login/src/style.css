:root {
  /* Primary Colors */
  --expedition-green: #1E3B2C;
  --midnight-charcoal: #2D3033;
  --misty-gray: #607D8B;
  
  /* Accent Colors */
  --bioluminescent-teal: #39F0D9;
  --evidence-amber: #FF9800;
  --scanner-green: #76FF03;
  
  /* Fonts */
  --font-heading: 'Rajdhani', sans-serif; /* Similar to described "Expedition" font */
  --font-body: 'Work Sans', sans-serif; /* Similar to described "Field Notes" font */
  --font-mono: 'Space Mono', monospace; /* Similar to described "Researcher's Log" font */
  
  /* Effects */
  --glass-opacity: 0.15;
  --blur-amount: 12px;
  --glow-strength: 3px;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: var(--font-body);
  color: #fff;
  line-height: 1.6;
  min-height: 100vh;
  position: relative;
  overflow-x: hidden;
  transition: background 0.5s ease, color 0.5s ease, all 0.8s ease;
}

/* Security State Color Transitions */
body {
  transition: all 0.8s ease;
}

.background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -2;
  background: linear-gradient(135deg, 
    var(--midnight-charcoal), 
    var(--expedition-green)
  );
  animation: backgroundPulse 15s ease-in-out infinite;
  transition: background 0.8s ease;
}

.glass-panel {
  transition: all 0.8s ease;
}

/* Different security states affect all elements using CSS variables */
input, button, a, .classified-stripe, .particle, .scanner-line {
  transition: all 0.8s ease;
}

/* Ensure radar ping uses theme colors */
.radar-ping {
  border-color: var(--bioluminescent-teal);
}

/* Make scanner line use theme colors */
.scanner-line {
  background: linear-gradient(
    90deg,
    transparent,
    var(--bioluminescent-teal),
    transparent
  ) !important;
}

/* Warning State Styles */
.warning-pulse {
  animation: warningPulse 3s infinite alternate;
}

@keyframes warningPulse {
  0%, 100% { box-shadow: var(--container-shadow); }
  50% { box-shadow: 0 4px 30px rgba(255, 193, 7, 0.3), 0 0 50px rgba(255, 193, 7, 0.3), inset 0 0 20px rgba(255, 193, 7, 0.2); }
}

/* Danger State Styles */
.danger-pulse {
  animation: dangerPulse 1.5s infinite alternate;
}

@keyframes dangerPulse {
  0%, 100% { box-shadow: var(--container-shadow); }
  50% { box-shadow: 0 4px 30px rgba(244, 67, 54, 0.4), 0 0 50px rgba(244, 67, 54, 0.4), inset 0 0 20px rgba(244, 67, 54, 0.3); }
}

/* Make the input focus colors match the security level */
body[data-security-level="warning"] input:focus {
  border-color: var(--bioluminescent-teal) !important;
  box-shadow: 0 0 8px var(--bioluminescent-teal) !important;
}

body[data-security-level="danger"] input:focus {
  border-color: var(--bioluminescent-teal) !important;
  box-shadow: 0 0 8px var(--bioluminescent-teal) !important;
}

/* Make particles match security level */
body[data-security-level="warning"] .particle {
  background-color: var(--particle-color) !important;
}

body[data-security-level="danger"] .particle {
  background-color: var(--particle-color) !important;
}

/* Ensure container backgrounds are correct */
body[data-security-level="warning"] .glass-panel {
  background: var(--container-bg) !important;
}

body[data-security-level="danger"] .glass-panel {
  background: var(--container-bg) !important;
}

.noise {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url('data:image/svg+xml,%3Csvg viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg"%3E%3Cfilter id="noiseFilter"%3E%3CfeTurbulence type="fractalNoise" baseFrequency="0.65" numOctaves="3" stitchTiles="stitch"/%3E%3C/filter%3E%3Crect width="100%" height="100%" filter="url(%23noiseFilter)" opacity="0.15"/%3E%3C/svg%3E');
  opacity: 0.3;
  z-index: -1;
  mix-blend-mode: overlay;
  animation: noiseShift 0.5s steps(2) infinite;
  pointer-events: none; /* Make sure this doesn't capture clicks */
}

.gradient-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at 20% 80%, rgba(57, 240, 217, 0.15), transparent 25%),
    radial-gradient(circle at 80% 20%, rgba(255, 152, 0, 0.1), transparent 25%);
  z-index: -1;
  pointer-events: none; /* Make sure this doesn't capture clicks */
}

.gradient-overlay::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(
    circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
    rgba(57, 240, 217, 0.15),
    transparent 35%
  );
  transition: opacity 0.3s ease;
  pointer-events: none; /* Make sure this doesn't capture clicks */
}

/* Additional Thematic Elements */
.topographic-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url('data:image/svg+xml,%3Csvg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg"%3E%3Cdefs%3E%3Cpattern id="topo" patternUnits="userSpaceOnUse" width="200" height="200"%3E%3Cpath d="M0,100 Q50,50 100,100 Q150,150 200,100 M0,50 Q50,0 100,50 Q150,100 200,50 M0,150 Q50,100 100,150 Q150,200 200,150" fill="none" stroke="rgba(57, 240, 217, 0.07)" stroke-width="0.5"/%3E%3C/pattern%3E%3C/defs%3E%3Crect width="100%" height="100%" fill="url(%23topo)"/"%3E%3C/svg%3E');
  z-index: -1;
  opacity: 0.4;
  pointer-events: none; /* Make sure this doesn't capture clicks */
}

.classified-stamp {
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  font-family: var(--font-mono);
  color: rgba(255, 152, 0, 0.2);
  border: 1px solid rgba(255, 152, 0, 0.2);
  padding: 0.2rem 0.4rem;
  font-size: 0.6rem;
  transform: rotate(12deg);
  text-transform: uppercase;
  letter-spacing: 1px;
  pointer-events: none; /* Make sure this doesn't capture clicks */
  z-index: 10;
  opacity: 0.15;
}

body[data-security-level="warning"] .classified-stamp {
  color: rgba(255, 193, 7, 0.3);
  border-color: rgba(255, 193, 7, 0.3);
  content: "WARNING: CLEARANCE BREACH";
}

body[data-security-level="danger"] .classified-stamp {
  color: rgba(244, 67, 54, 0.4);
  border-color: rgba(244, 67, 54, 0.4);
  content: "DANGER: UNAUTHORIZED ACCESS";
}

.redacted-text {
  position: relative;
}

.redacted-text::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: #fff;
  transform: translateY(-50%);
}

.coordinates-grid {
  position: relative;
  display: inline-block;
}

.grid-line {
  position: absolute;
  background-color: rgba(57, 240, 217, 0.2);
}

.grid-line:nth-child(1) {
  width: 100%;
  height: 1px;
  top: -5px;
  left: 0;
}

.grid-line:nth-child(2) {
  width: 1px;
  height: 100%;
  top: 0;
  right: -5px;
}

.morse-code {
  display: none; /* Hide completely */
}

.hidden-cryptid {
  position: absolute;
  bottom: 10px;
  right: 10px;
  width: 80px;
  height: 40px;
  background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 40"%3E%3Cpath d="M20,30 C30,10 50,10 60,30 C50,15 30,15 20,30 Z M25,20 A2,2 0 1,1 29,20 A2,2 0 1,1 25,20 Z" fill="rgba(57, 240, 217, 0.05)"/%3E%3C/svg%3E');
  opacity: 0.2;
  transition: opacity 0.5s ease;
  pointer-events: none; /* Make sure this doesn't capture clicks */
}

.hidden-cryptid:hover {
  opacity: 0.5;
}

.scan-animation {
  display: none; /* Hide completely */
}

.binary-code {
  display: none;
}

/* Layout */
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem;
  display: flex;
  flex-direction: column;
  padding-top: 5vh; /* Add some space at the top */
  justify-content: center; /* Center content vertically */
  min-height: 100vh; /* Make container fill viewport height */
}

.container::before {
  content: none; /* Remove "CRYPTID COLLECTIVE" from top-right */
}

header {
  display: none; /* Remove the entire navbar/header area */
}

/* Enhanced glassmorphism */
.glass-panel {
  background: rgba(45, 48, 51, 0.1);
  backdrop-filter: blur(20px) contrast(120%);
  border: 1px solid rgba(255, 255, 255, 0.05);
  box-shadow: 
    0 4px 30px rgba(0, 0, 0, 0.2),
    0 0 50px rgba(57, 240, 217, 0.1),
    inset 0 0 15px rgba(57, 240, 217, 0.05);
  border-radius: 10px;
  padding: 2.5rem;
  position: relative;
  overflow: hidden;
  max-width: 550px;
  margin: auto; /* Center vertically when possible */
  width: 100%;
  transform-style: preserve-3d;
  perspective: 1000px;
  transition: background 0.5s ease, box-shadow 0.5s ease, border-color 0.5s ease, all 0.8s ease;
}

.glass-panel::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
}

.glass-panel::after {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg,
    transparent 30%,
    rgba(57, 240, 217, 0.03) 40%,
    rgba(57, 240, 217, 0.03) 60%,
    transparent 70%
  );
  z-index: 1; /* Ensure the shine is above other content */
  pointer-events: none; /* Make sure clicks pass through */
}

.glass-panel .shine-effect {
  position: absolute;
  top: -100%;
  left: -100%;
  width: 150%;
  height: 200%;
  background: linear-gradient(
    225deg,
    transparent 30%,
    rgba(255, 255, 255, 0.03) 50%,
    transparent 70%
  );
  transform: rotate(35deg);
  transition: transform 1.5s cubic-bezier(0.2, 0.8, 0.2, 1);
  pointer-events: none; /* Make sure clicks pass through */
  z-index: 1; /* Position it above content but below other effects */
}

.glass-panel:hover .shine-effect {
  transform: translateX(10%) rotate(35deg);
}

@keyframes subtleShine {
  0%, 100% { opacity: 0.03; }
  50% { opacity: 0.05; }
}

.glass-panel .shine-effect {
  animation: subtleShine 8s infinite;
}

/* Enhanced Security System Indicators */
.security-indicators {
  display: flex;
  gap: 6px;
  position: absolute;
  bottom: 12px; /* Position at the bottom of the button */
  right: 12px; /* Position on the right side of the button */
  z-index: 10;
}

.indicator {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3); /* Lighter dots against button background */
  transition: all 0.5s cubic-bezier(0.2, 0, 0.4, 1);
}

.indicator.active {
  background: var(--bioluminescent-teal);
  box-shadow: 0 0 8px var(--bioluminescent-teal);
  animation: pulse 1s infinite;
}

.indicator.warning {
  background: var(--evidence-amber);
  box-shadow: 0 0 8px var(--evidence-amber);
  animation: pulse 0.5s infinite;
}

.indicator.danger {
  background: #f44336; /* Red color for danger */
  box-shadow: 0 0 8px #f44336;
  animation: pulse 0.3s infinite;
}

/* Authentication Notification */
.auth-notification {
  position: absolute;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  padding: 10px 20px;
  border-radius: 4px;
  font-family: var(--font-mono);
  font-weight: bold;
  text-align: center;
  z-index: 100;
  animation: slideDown 0.3s forwards;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
}

.auth-notification.error {
  background-color: rgba(244, 67, 54, 0.9);
  color: white;
}

.auth-notification.warning {
  background-color: rgba(255, 152, 0, 0.9);
  color: black;
  font-size: 1.05em;
}

.auth-notification.critical {
  background-color: rgba(153, 0, 0, 0.95); /* Darker, more opaque red */
  color: white;
  animation: criticalPulse 0.7s infinite;
  font-size: 1.1em;
  border: 1px solid #f44336;
  text-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
  backdrop-filter: blur(4px);
  font-family: var(--font-mono);
  letter-spacing: 0.5px;
  position: relative;
}

.auth-notification.critical::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    45deg,
    rgba(244, 67, 54, 0.1),
    rgba(244, 67, 54, 0.1) 10px,
    rgba(0, 0, 0, 0) 10px,
    rgba(0, 0, 0, 0) 20px
  );
  pointer-events: none;
}

.auth-notification.notice {
  background: rgba(57, 240, 217, 0.1);
  border: 1px solid rgba(57, 240, 217, 0.3);
  color: var(--bioluminescent-teal);
  box-shadow: 0 0 15px rgba(57, 240, 217, 0.2);
}

.auth-notification.success {
  background: rgba(57, 240, 217, 0.15);
  border: 1px solid var(--bioluminescent-teal);
  color: var(--bioluminescent-teal);
  animation: successPulse 2s infinite;
}

/* Dramatically Enhanced Lockout State */
.glass-panel.lockout {
  animation: lockoutPulse 1.5s infinite alternate;
  box-shadow: 
    0 4px 30px rgba(244, 67, 54, 0.4),
    0 0 50px rgba(244, 67, 54, 0.4),
    inset 0 0 15px rgba(244, 67, 54, 0.3);
  transition: all 0.5s ease;
  border-color: rgba(244, 67, 54, 0.6);
}

.glass-panel.shake {
  animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
}

.glass-panel.lockout::after {
  background: linear-gradient(
    45deg,
    transparent 30%,
    rgba(244, 67, 54, 0.1) 40%,
    rgba(244, 67, 54, 0.1) 60%,
    transparent 70%
  );
  animation: redAlertScan 3s linear infinite;
}

.glass-panel.lockout input,
.glass-panel.lockout button {
  pointer-events: none;
  filter: grayscale(0.8);
  opacity: 0.8;
}

.lockout-message {
  display: none;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #f44336;
  font-family: var(--font-mono);
  font-size: 1.2rem;
  text-align: center;
  background: rgba(0, 0, 0, 0.85);
  padding: 2rem;
  border-radius: 4px;
  width: 90%;
  z-index: 20;
  animation: glitchText 0.2s infinite;
  border: 1px solid #f44336;
  box-shadow: 0 0 20px rgba(244, 67, 54, 0.5);
  text-shadow: 0 0 5px rgba(244, 67, 54, 0.8);
  letter-spacing: 1px;
}

.lockout-message .alert-prefix {
  color: #ff0000;
  font-weight: bold;
  font-size: 1.4em;
  animation: blink 1s infinite;
  display: block;
  margin-bottom: 10px;
}

.lockout-message span {
  display: block;
  font-size: 0.9rem;
  margin-top: 1rem;
  opacity: 0.9;
}

.lockout-message .small-text {
  font-size: 0.7rem;
  margin-top: 1.5rem;
  opacity: 0.6;
}

.glass-panel.lockout .lockout-message {
  display: block;
}

/* Security Breach Full Screen Effects - Enhanced Red Filter */
.security-breach {
  overflow: hidden; /* Prevent scrolling during lockout */
}

/* Add SVG filter to HTML */
body.security-breach {
  filter: url('#intense-red-filter') brightness(0.9) saturate(1.2);
  animation: redPulse 3s infinite alternate;
}

/* Make all page elements inherit the red filter */
body.security-breach * {
  filter: none; /* Prevent double-filtering */
}

/* Override any filters on specific elements */
body.security-breach .glass-panel,
body.security-breach .background,
body.security-breach .container,
body.security-breach .form-container,
body.security-breach input,
body.security-breach button {
  filter: none !important; /* Ensure no child elements override the body filter */
}

/* Intensify the red background color */
body.security-breach .background {
  animation: redBackgroundPulse 4s infinite alternate;
  background: linear-gradient(135deg, #661111, #4D0000) !important;
  opacity: 1;
}

/* Stronger red overlay for breach state */
body.security-breach::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 0, 0, 0.1);
  z-index: 5;
  pointer-events: none;
  mix-blend-mode: multiply;
}

/* More intense red pulse animation */
@keyframes redPulse {
  0% { filter: url('#intense-red-filter') brightness(0.9) saturate(1.2); }
  50% { filter: url('#intense-red-filter') brightness(0.8) saturate(1.3); }
  100% { filter: url('#intense-red-filter') brightness(0.9) saturate(1.2); }
}

/* More dramatic background animation */
@keyframes redBackgroundPulse {
  0% { opacity: 0.95; filter: brightness(0.9); }
  50% { opacity: 1; filter: brightness(1); }
  100% { opacity: 0.95; filter: brightness(0.9); }
}

.security-breach::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(80, 0, 0, 0.15);
  z-index: 5;
  pointer-events: none;
}

.security-flash {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 0, 0, 0.3);
  z-index: 999;
  pointer-events: none;
  animation: flash 1s infinite;
}

.breach-counter {
  position: fixed;
  top: 20px;
  left: 20px;
  background: rgba(0, 0, 0, 0.7);
  border: 1px solid #f44336;
  padding: 10px 15px;
  font-family: var(--font-mono);
  color: #f44336;
  font-size: 0.8rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  animation: pulse 1s infinite;
  z-index: 1000;
}

.breach-counter .counter {
  font-size: 1.2rem;
  font-weight: bold;
  margin-top: 5px;
}

/* Dramatically Enhanced Security Breach Styles */
html.red-filter-active {
  filter: url('#red-filter');
}

html.red-pulse {
  animation: redPulseIntense 3s infinite alternate;
}

/* Security Breach Full Screen Effects - Dramatically Enhanced */
.security-breach {
  overflow: hidden; /* Prevent scrolling during lockout */
}

/* More intense red overlay */
.security-flash.critical-breach {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 0, 0, 0.4);
  z-index: 999;
  pointer-events: none;
  animation: criticalFlash 1.5s infinite;
  mix-blend-mode: multiply;
}

/* Add red biohazard pattern overlay */
body.security-breach::after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40"%3E%3Cpath d="M20,0 L20,40 M0,20 L40,20" stroke="rgba(255,0,0,0.15)" fill="none"/%3E%3C/svg%3E');
  opacity: 0.3;
  pointer-events: none;
  z-index: 998;
}

/* More dramatic background animation */
body.security-breach .background {
  animation: redBackgroundPulseIntense 4s infinite alternate !important;
  background: linear-gradient(135deg, #661111, #4D0000) !important;
  opacity: 1;
}

/* Change all text to red emergency colors */
body.security-breach h1,
body.security-breach p,
body.security-breach label,
body.security-breach span:not(.alert-prefix) {
  color: #ffcccc !important;
  text-shadow: 0 0 5px rgba(255, 0, 0, 0.7) !important;
}

/* More intense animations for security breach */
@keyframes redPulseIntense {
  0% { filter: url('#red-filter') brightness(0.9) saturate(1.2); }
  50% { filter: url('#red-filter') brightness(1.0) saturate(1.5); }
  100% { filter: url('#red-filter') brightness(0.8) saturate(1.3); }
}

@keyframes criticalFlash {
  0% { opacity: 0.1; }
  5% { opacity: 0.4; }
  10% { opacity: 0.1; }
  15% { opacity: 0.1; }
  20% { opacity: 0.3; }
  25% { opacity: 0.1; }
  35% { opacity: 0.5; }
  40% { opacity: 0.1; }
  100% { opacity: 0.1; }
}

@keyframes redBackgroundPulseIntense {
  0% { filter: brightness(0.7) saturate(1.4); }
  50% { filter: brightness(1.0) saturate(1.6); }
  100% { filter: brightness(0.7) saturate(1.4); }
}

/* Drain color from inputs during security breach */
body.security-breach input {
  color: #ff6666 !important;
  border-color: #990000 !important;
}

/* Make buttons appear "emergency" styled */
body.security-breach .btn-primary {
  background: rgba(255, 0, 0, 0.3) !important;
  border-color: rgba(255, 0, 0, 0.6) !important;
  color: #ffffff !important;
  box-shadow: 0 0 15px rgba(255, 0, 0, 0.4) !important;
}

/* COMPREHENSIVE RED SECURITY BREACH - top level filter applies to ALL content */
html.security-breach-active {
  filter: url('#security-breach-filter');
}

html.total-breach * {
  /* Override ANY color in the system during security breach */
  transition: all 0.1s !important;
}

/* Full screen overlay with warning pattern */
.breach-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 999;
  background-image: 
    repeating-linear-gradient(45deg, 
      rgba(255, 0, 0, 0.05) 0px,
      rgba(255, 0, 0, 0.05) 10px,
      rgba(0, 0, 0, 0) 10px,
      rgba(0, 0, 0, 0) 20px
    ),
    url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="0 0 50 50"%3E%3Cpath d="M25,0 L25,50 M0,25 L50,25" stroke="rgba(255,0,0,0.1)" stroke-width="2"/%3E%3C/svg%3E');
  mix-blend-mode: multiply;
  animation: redPulse 4s infinite alternate;
}

/* Force text color to red tones in breach mode */
html.total-breach h1,
html.total-breach p,
html.total-breach label,
html.total-breach a,
html.total-breach .btn-primary,
html.total-breach .classified-stamp,
html.total-breach input,
html.total-breach button,
html.total-breach span {
  color: #ff6666 !important;
  border-color: #990000 !important;
  text-shadow: 0 0 10px rgba(255, 0, 0, 0.7) !important;
}

/* Force backgrounds to red hues */
html.total-breach .glass-panel {
  background: rgba(70, 0, 0, 0.2) !important;
  box-shadow: 
    0 4px 30px rgba(255, 0, 0, 0.3),
    0 0 50px rgba(255, 0, 0, 0.2),
    inset 0 0 15px rgba(255, 0, 0, 0.1) !important;
  border-color: rgba(255, 0, 0, 0.3) !important;
}

/* Convert any green/teal glow to red */
html.total-breach .btn-primary {
  background: rgba(100, 0, 0, 0.3) !important;
  box-shadow: 0 0 15px rgba(255, 0, 0, 0.4) !important;
}

html.total-breach .btn-primary:hover {
  background: rgba(153, 0, 0, 0.4) !important;
  box-shadow: 0 0 20px rgba(255, 0, 0, 0.5) !important;
}

/* Make button glow red */
html.total-breach .btn-primary .btn-glow {
  background: linear-gradient(45deg, rgba(255, 0, 0, 0.5), transparent) !important;
}

/* Force classified stamp to red */
html.total-breach .classified-stamp {
  color: rgba(255, 0, 0, 0.7) !important;
  border-color: rgba(255, 0, 0, 0.7) !important;
  content: "EMERGENCY: UNAUTHORIZED ACCESS" !important;
  opacity: 0.8 !important;
}

/* Force the scanner line to be red */
html.total-breach .scanner-line {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 0, 0, 0.8),
    transparent
  ) !important;
  animation-duration: 0.5s !important; /* Faster scanning */
  opacity: 0.8 !important;
  height: 3px !important;
}

/* Make particles red */
html.total-breach .particle {
  background-color: rgba(255, 0, 0, 0.6) !important;
  box-shadow: 0 0 3px rgba(255, 0, 0, 0.6) !important;
}

/* Make indicators red */
html.total-breach .indicator {
  background-color: rgba(255, 0, 0, 0.6) !important;
  box-shadow: 0 0 5px rgba(255, 0, 0, 0.6) !important;
}

/* Make text glow red */
html.total-breach .glitch-text::before,
html.total-breach .glitch-text::after {
  text-shadow: 2px 0 rgba(255, 0, 0, 0.7) !important;
}

/* Make radar pings red */
html.total-breach .radar-ping {
  border-color: rgba(255, 0, 0, 0.6) !important;
}

/* More intense red flashing */
@keyframes intensifiedRedFlash {
  0% { opacity: 0.1; }
  5% { opacity: 0.6; }
  10% { opacity: 0.1; }
  15% { opacity: 0.1; }
  20% { opacity: 0.4; }
  25% { opacity: 0.1; }
  35% { opacity: 0.7; }
  40% { opacity: 0.1; }
  100% { opacity: 0.1; }
}

/* Additional red pulse animation for the entire overlay */
@keyframes redPulse {
  0% { opacity: 0.7; }
  50% { opacity: 1.0; }
  100% { opacity: 0.7; }
}

/* Force inputs to have red focus styles */
html.total-breach input:focus {
  border-color: #990000 !important;
  box-shadow: 0 0 8px rgba(255, 0, 0, 0.4) !important;
}

/* Force input glow to be red */
html.total-breach .input-glow {
  background-color: rgba(153, 0, 0, 0.1) !important;
  box-shadow: 0 0 8px rgba(255, 0, 0, 0.4) !important;
}

/* Form styling */
.form-container {
  transition: all 0.4s ease;
  position: relative;
  z-index: 5; /* Ensure form is above decorative elements */
}

.form-container.hidden {
  display: none;
}

.input-container {
  display: flex;
  align-items: center;
  position: relative;
  margin-bottom: 0.5rem;
  z-index: 5; /* Ensure inputs are clickable */
}

.input-prefix {
  color: var(--bioluminescent-teal);
  font-family: var(--font-mono);
  font-size: 1.2rem;
  margin-right: 0.5rem;
  opacity: 0.7;
  position: absolute;
  left: 0.7rem;
  top: 50%;
  transform: translateY(-50%);
  z-index: 5;
  user-select: none;
  pointer-events: none;
}

.input-prefix.secure {
  color: var(--evidence-amber);
}

.input-container input {
  width: 100%;
  padding: 0.75rem 1rem;
  padding-left: 2rem;
  border: 1px solid rgba(96, 125, 139, 0.3);
  border-radius: 4px;
  background: rgba(45, 48, 51, 0.3);
  color: #fff;
  font-family: var(--font-body);
  transition: border-color 0.3s ease, background-color 0.3s ease, all 0.8s ease;
  position: relative; /* Ensure proper stacking */
  z-index: 2; /* Higher than decorative elements */
}

/* Style date input */
input[type="date"] {
  font-family: var(--font-body);
  color: #fff;
  background: rgba(45, 48, 51, 0.3);
  border: 1px solid rgba(96, 125, 139, 0.3);
  border-radius: 4px;
  padding: 0.75rem 1rem;
  width: 100%;
}

/* Experimental typography */
h1 {
  font-family: var(--font-heading);
  color: #fff;
  font-size: clamp(1.8rem, 5vw, 2.5rem);
  line-height: 1;
  margin-bottom: 0.5rem;
  font-weight: 600;
  letter-spacing: -0.02em;
  transform: translateZ(0);
}

h1::before {
  content: attr(data-text);
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  opacity: 0.1;
  filter: blur(8px);
  transform: translateZ(-1px);
}

/* Modified classified stripe - remove indicators */
.classified-stripe {
  background-color: var(--evidence-amber);
  color: var(--midnight-charcoal);
  font-family: var(--font-mono);
  font-size: 0.7rem;
  font-weight: bold;
  padding: 0.25rem 0.75rem;
  display: inline-block; /* Changed from inline-flex */
  margin-bottom: 1.5rem;
  letter-spacing: 1px;
  transition: all 0.8s ease;
}

.form-group {
  position: relative;
  margin-bottom: 1.5rem;
  opacity: 0;
  transform: translateY(10px);
  animation: fadeInUp 0.5s forwards;
}

.protocol-acceptance {
  margin: 2rem 0;
  position: relative;
  z-index: 4;
}

.form-group.scanned::before {
  content: '';
  position: absolute;
  top: 0;
  left: -10px;
  width: calc(100% + 20px);
  height: 2px;
  background: linear-gradient(90deg, 
    transparent, 
    var(--bioluminescent-teal),
    transparent
  );
  animation: scanLine 0.5s ease-out forwards;
  opacity: 0.5;
  z-index: 1;
}

@keyframes scanLine {
  0% { transform: translateY(0); opacity: 0.7; }
  100% { transform: translateY(100%); opacity: 0; }
}

@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

label {
  display: block;
  font-size: 0.9rem;
  margin-bottom: 0.5rem;
  color: var(--misty-gray);
}

/* Enhanced form elements */
.input-container::before {
  display: none; /* Remove the gradient effect */
}

input:focus {
  outline: none;
  border-color: var(--bioluminescent-teal);
  background: rgba(45, 48, 51, 0.5);
}

.input-glow {
  display: none; /* Remove the glow effect */
}

.form-actions {
  display: block;
  margin-top: 1.5rem;
}

/* Improved Checkbox Design - Attempt 2 */
.checkbox-container {
  position: relative; /* Crucial for absolute positioning of children */
  display: inline-flex; /* Use flex to align items nicely */
  align-items: center;
  padding-left: 35px; /* Keep space for the checkmark */
  margin: 10px 0;
  cursor: pointer;
  font-size: 0.9rem;
  user-select: none;
  color: var(--misty-gray);
  min-height: 22px; /* Ensure it has height */
  z-index: 5; /* Base z-index for the container */
}

.checkbox-container input {
  position: absolute;
  opacity: 0; /* Keep it invisible */
  cursor: pointer;
  /* Make the invisible input cover the entire label area */
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  margin: 0; /* Reset margin */
  padding: 0; /* Reset padding */
  z-index: 7; /* Highest z-index: This invisible element should receive the click */
}

.checkmark {
  position: absolute;
  top: 50%;
  left: 0; /* Position at the start of the padding */
  transform: translateY(-50%);
  height: 22px;
  width: 22px;
  background: rgba(45, 48, 51, 0.8);
  border: 1px solid rgba(57, 240, 217, 0.4);
  border-radius: 4px;
  transition: all 0.3s ease;
  display: block;
  z-index: 6; /* Below the input, above the container background */
  pointer-events: none; /* The checkmark itself shouldn't capture clicks */
}

/* Keep existing hover/checked styles for .checkmark */
.checkbox-container:hover .checkmark {
  background: rgba(57, 240, 217, 0.15);
  border-color: var(--bioluminescent-teal);
  box-shadow: 0 0 10px rgba(57, 240, 217, 0.3);
}

.checkbox-container input:checked ~ .checkmark {
  background: rgba(57, 240, 217, 0.3);
  border-color: var(--bioluminescent-teal);
}

.checkmark:after {
  content: "";
  position: absolute;
  display: none;
  left: 7px;
  top: 3px;
  width: 6px;
  height: 11px;
  border: solid var(--bioluminescent-teal);
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
  /* No pointer events needed here either */
}

.checkbox-container input:checked ~ .checkmark:after {
  display: block;
}

/* Ensure the text span is also layered correctly if needed */
.checkbox-container span:not(.checkmark) {
  position: relative; /* Ensure text is part of the flow */
  z-index: 6; /* Same level as checkmark visual */
  pointer-events: none; /* Text shouldn't block clicks to the input */
}

/* Ensure form options have proper spacing and alignment */
.form-options {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 1rem 0;
  position: relative;
  z-index: 4;
}

/* Custom Toggle Element (Checkbox Alternative) */
.custom-toggle-container {
  display: flex;
  align-items: center;
  position: relative;
  padding-left: 35px;
  margin: 10px 0;
  cursor: pointer;
  font-size: 0.9rem;
  color: var(--misty-gray);
  user-select: none;
  min-height: 22px;
  z-index: 5;
}

.custom-toggle {
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  height: 22px;
  width: 22px;
  background: rgba(45, 48, 51, 0.8);
  border: 1px solid rgba(57, 240, 217, 0.4);
  border-radius: 4px;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.custom-toggle-container:hover .custom-toggle {
  background: rgba(57, 240, 217, 0.15);
  border-color: var(--bioluminescent-teal);
  box-shadow: 0 0 10px rgba(57, 240, 217, 0.3);
}

.custom-toggle.checked {
  background: rgba(57, 240, 217, 0.3);
  border-color: var(--bioluminescent-teal);
}

.custom-toggle.checked::after {
  content: "";
  width: 6px;
  height: 11px;
  border: solid var(--bioluminescent-teal);
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
  display: block;
  margin-bottom: 2px;
}

/* Hidden inputs for form submission */
.custom-toggle-container input {
  position: absolute;
  opacity: 0;
  height: 0;
  width: 0;
  pointer-events: none;
}

/* Buttons */
.btn-primary, .btn-secondary {
  font-family: var(--font-heading);
  border: none;
  border-radius: 4px;
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  cursor: pointer;
  position: relative;
  letter-spacing: 0.5px;
  overflow: hidden;
  transition: all 0.3s ease, background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease, all 0.8s ease;
  width: 100%;
  margin-bottom: 1rem;
}

.btn-primary {
  background: rgba(57, 240, 217, 0.2);
  color: var(--bioluminescent-teal);
  border: 1px solid rgba(57, 240, 217, 0.3);
  position: relative; /* Ensure positioning context for indicators */
}

.btn-secondary {
  background: rgba(96, 125, 139, 0.2);
  color: var(--misty-gray);
  border: 1px solid rgba(96, 125, 139, 0.2);
}

.btn-glow {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(45deg, var(--bioluminescent-teal), transparent);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.btn-primary:hover .btn-glow {
  opacity: 0.2;
}

.btn-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 0 15px rgba(57, 240, 217, 0.3);
}

.btn-secondary:hover {
  background: rgba(96, 125, 139, 0.3);
}

/* Links */
.accent-link {
  color: var(--bioluminescent-teal);
  text-decoration: none;
  position: relative;
  transition: all 0.2s ease, background-color 0.5s ease, color 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease, all 0.8s ease;
}

.accent-link::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 0;
  height: 1px;
  background-color: var(--bioluminescent-teal);
  transition: width 0.3s ease;
}

.accent-link:hover::after {
  width: 100%;
}

/* Form steps */
.form-step,
.specialty-options,
.equipment-selection,
.security-level,
.clearance-setup {
  display: none;
}

/* Footer */
footer {
  margin-top: 0;
  padding: 1rem 0;
  text-align: center;
}

.disclaimer {
  font-family: var(--font-mono);
  font-size: 0.7rem;
  color: var(--misty-gray);
  opacity: 0.6;
  letter-spacing: 1px;
}

/* Animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes scanLine {
  0% { transform: translateY(-100%); }
  100% { transform: translateY(100%); }
}

@keyframes backgroundPulse {
  0%, 100% { filter: hue-rotate(0deg); }
  50% { filter: hue-rotate(15deg); }
}

@keyframes surfaceShift {
  0% { transform: translateX(-100%) skewX(-15deg); }
  100% { transform: translateX(100%) skewX(-15deg); }
}

@keyframes noiseShift {
  0%, 100% { transform: translate(0, 0); }
  25% { transform: translate(4px, -4px); }
  50% { transform: translate(-4px, 4px); }
  75% { transform: translate(-4px, -4px); }
}

/* Experimental Effects */
.scanner-line {
  position: absolute;
  width: 100%;
  height: 2px;
  background: linear-gradient(
    90deg,
    transparent,
    var(--bioluminescent-teal),
    transparent
  );
  animation: scannerMove 2s linear infinite;
  opacity: 0.5;
  pointer-events: none; /* Make sure this doesn't capture clicks */
  transition: all 0.8s ease;
}

.glitch-text {
  position: relative;
  animation: textGlitch 0.2s infinite;
}

.glitch-text::before,
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  clip: rect(0, 900px, 0, 0);
}

.glitch-text::before {
  text-shadow: -2px 0 var(--evidence-amber);
  animation: glitchEffect1 3s infinite linear alternate-reverse;
}

.glitch-text::after {
  text-shadow: 2px 0 var(--scanner-green);
  animation: glitchEffect2 2s infinite linear alternate-reverse;
}

.radar-ping {
  position: absolute;
  width: 200px;
  height: 200px;
  border-radius: 50%;
  border: 2px solid var(--bioluminescent-teal);
  transform: translate(-50%, -50%);
  animation: radarPing 2s cubic-bezier(0, 0.2, 0.8, 1) infinite;
  pointer-events: none;
}

.particle-field {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none; /* Make sure this doesn't capture clicks */
}

.particle {
  position: absolute;
  background: var(--bioluminescent-teal);
  width: 2px;
  height: 2px;
  border-radius: 50%;
  filter: blur(1px);
  animation: particleFloat 20s linear infinite;
  transition: all 0.8s ease;
}

/* New Animations */
@keyframes scannerMove {
  0% { transform: translateY(-100%); opacity: 0; }
  50% { opacity: 0.5; }
  100% { transform: translateY(100%); opacity: 0; }
}

@keyframes glitchEffect1 {
  0% { clip: rect(44px, 900px, 56px, 0); }
  20% { clip: rect(12px, 900px, 65px, 0); }
  40% { clip: rect(78px, 900px, 82px, 0); }
  60% { clip: rect(32px, 900px, 39px, 0); }
  80% { clip: rect(92px, 900px, 98px, 0); }
  100% { clip: rect(21px, 900px, 28px, 0); }
}

@keyframes glitchEffect2 {
  0% { clip: rect(21px, 900px, 28px, 0); }
  20% { clip: rect(92px, 900px, 98px, 0); }
  40% { clip: rect(32px, 900px, 39px, 0); }
  60% { clip: rect(78px, 900px, 82px, 0); }
  80% { clip: rect(12px, 900px, 65px, 0); }
  100% { clip: rect(44px, 900px, 56px, 0); }
}

@keyframes radarPing {
  0% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(0);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes particleFloat {
  from {
    transform: translateY(-10px) translateX(0);
  }
  to {
    transform: translateY(110vh) translateX(20px);
  }
}

@keyframes scanHorizontal {
  0% { top: -10px; left: -100%; }
  100% { top: 100%; left: 0; }
}

@keyframes redactionReveal {
  0% { width: 100%; }
  90% { width: 0; }
  100% { width: 0; }
}

@keyframes fadeInOut {
  0% { opacity: 0.1; }
  50% { opacity: 0.4; }
  100% { opacity: 0.1; }
}

@keyframes lockoutPulse {
  0% { background: rgba(45, 48, 51, 0.1); }
  50% { background: rgba(80, 20, 20, 0.2); }
  100% { background: rgba(120, 10, 10, 0.3); }
}

@keyframes pulse {
  0% { opacity: 1; }
  50% { opacity: 0.5; }
  100% { opacity: 1; }
}

@keyframes shake {
  10%, 90% { transform: translate3d(-1px, 0, 0); }
  20%, 80% { transform: translate3d(2px, 0, 0); }
  30%, 50%, 70% { transform: translate3d(-4px, 0, 0); }
  40%, 60% { transform: translate3d(4px, 0, 0); }
}

@keyframes slideDown {
  from { top: -50px; opacity: 0; }
  to { top: 10px; opacity: 1; }
}

@keyframes criticalPulse {
  0% { background-color: #990000; }
  50% { background-color: #ff0000; }
  100% { background-color: #990000; }
}

@keyframes blink {
  0% { opacity: 1; }
  49% { opacity: 1; }
  50% { opacity: 0; }
  100% { opacity: 0; }
}

@keyframes flash {
  0% { opacity: 0; }
  5% { opacity: 0.7; }
  10% { opacity: 0; }
  15% { opacity: 0; }
  20% { opacity: 0.2; }
  25% { opacity: 0; }
  100% { opacity: 0; }
}

@keyframes redAlertScan {
  0% { 
    background-position: 0% 0%;
    opacity: 0.2;
  }
  50% {
    opacity: 0.5;
  }
  100% { 
    background-position: 200% 0%;
    opacity: 0.2;
  }
}

@keyframes warningPulse {
  0%, 100% { box-shadow: var(--container-shadow); }
  50% { box-shadow: 0 4px 30px rgba(255, 193, 7, 0.3), 0 0 50px rgba(255, 193, 7, 0.2), inset 0 0 20px rgba(255, 193, 7, 0.1); }
}

@keyframes dangerPulse {
  0%, 100% { box-shadow: var(--container-shadow); }
  50% { box-shadow: 0 4px 30px rgba(244, 67, 54, 0.3), 0 0 50px rgba(244, 67, 54, 0.2), inset 0 0 20px rgba(244, 67, 54, 0.1); }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .container {
    padding: 1rem;
  }
  
  .glass-panel {
    padding: 1.5rem;
  }
  
  header {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
  
  .logo {
    height: 32px;
  }
  
  .coordinates {
    text-align: left;
  }
  
  .form-options {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }

  .flavor-header,
  .disclaimer {
    font-size: 0.6rem;
    padding: 0.3rem;
    letter-spacing: 0.5px;
  }

  .header-coordinates {
    display: none; /* Hide coordinates on mobile to save space */
  }
  
  .environment-status {
    flex-direction: column;
    gap: 0.3rem;
    font-size: 0.6rem;
    padding: 0.5rem;
  }
  
  .mission-note {
    font-size: 0.6rem;
    padding: 0.4rem;
    margin-top: 0.5rem;
  }
  
  .help-hint {
    font-size: 0.6rem;
    bottom: 0.5rem;
    padding: 0.3rem 0.5rem;
  }
  
  .time-label {
    font-size: 0.6rem;
  }
  
  .classified-stamp {
    font-size: 0.8rem;
    padding: 0.3rem 0.6rem;
    right: 0.5rem;
    top: 0.5rem;
  }

  .auth-notification {
    width: 90%;
    font-size: 0.7rem;
    padding: 0.5rem;
  }

  .container {
    padding: 0.5rem;
  }
  
  .glass-panel {
    padding: 1rem;
  }
}

@media (max-width: 380px) {
  .flavor-header {
    flex-direction: column;
    gap: 0.2rem;
    align-items: flex-start;
  }
  
  .environment-status .status-item {
    font-size: 0.55rem;
  }
}

.coordinates {
  position: fixed;
  bottom: 1rem;
  right: 1rem;
  font-family: var(--font-mono);
  font-size: 0.7rem;
  color: var(--misty-gray);
  opacity: 0.6;
  text-align: right;
}

/* Warning State Styles */
body.warning-state .glass-panel {
  border-color: rgba(255, 193, 7, 0.1);
}

/* Danger State Styles - before full lockout */
body.danger-state .glass-panel:not(.lockout) {
  border-color: rgba(244, 67, 54, 0.1);
  box-shadow: 0 4px 30px rgba(244, 67, 54, 0.2), 0 0 50px rgba(244, 67, 54, 0.1), inset 0 0 15px rgba(244, 67, 54, 0.05);
}

/* State-specific particle colors */
body[data-security-level="warning"] .particle {
  background: var(--bioluminescent-teal) !important;
}

body[data-security-level="danger"] .particle {
  background: var(--bioluminescent-teal) !important;
}

/* State-specific scanner line */
body[data-security-level="warning"] .scanner-line {
  background: linear-gradient(90deg, transparent, var(--bioluminescent-teal), transparent);
}

body[data-security-level="danger"] .scanner-line {
  background: linear-gradient(90deg, transparent, var(--bioluminescent-teal), transparent);
  animation-duration: 1s; /* Faster scanning */
}

/* State-specific button colors */
body[data-security-level="warning"] .btn-primary {
  background: rgba(255, 193, 7, 0.2);
  color: var(--bioluminescent-teal);
  border: 1px solid rgba(255, 193, 7, 0.3);
}

body[data-security-level="danger"] .btn-primary {
  background: rgba(244, 67, 54, 0.2);
  color: var(--bioluminescent-teal);
  border: 1px solid rgba(244, 67, 54, 0.3);
}

/* Adjust input field colors by security state */
body[data-security-level="warning"] input:focus {
  border-color: var(--bioluminescent-teal);
}

body[data-security-level="danger"] input:focus {
  border-color: var(--bioluminescent-teal);
}

/* Flavor Header Styles - match EXACTLY with footer disclaimer text */
.flavor-header {
  font-family: var(--font-mono);
  display: flex;
  justify-content: space-between;
  width: 100%;
  padding: 0.5rem 0.2rem;
  margin-bottom: 1.5rem;
  font-size: 0.7rem; /* Match disclaimer size */
  letter-spacing: 1px; /* Match disclaimer letter spacing */
  text-transform: uppercase;
  opacity: 0.6; /* Match disclaimer opacity */
  transform: translateY(-10px);
  transition: opacity 0.8s, transform 0.8s;
}

.flavor-header.header-appeared {
  opacity: 0.6; /* Keep consistent with disclaimer */
  transform: translateY(0);
}

/* All flavor header elements match disclaimer color exactly */
.header-batch, .header-coordinates, .header-phrase {
  color: var(--misty-gray); /* Match footer disclaimer color */
}

.header-batch:before {
  content: ">";
  margin-right: 5px;
  color: var(--misty-gray); /* Match footer disclaimer color */
}

/* Flavor Header State Changes */
.header-batch.warning-alert {
  color: var(--evidence-amber);
}

.header-batch.warning-alert:before {
  content: "!>";
  color: var(--evidence-amber);
  animation: blink 1s infinite;
}

.header-batch.danger-alert {
  color: #f44336;
}

.header-batch.danger-alert:before {
  content: "!!>";
  color: #f44336;
  animation: blink 0.5s infinite;
}

.header-coordinates.warning-flicker {
  animation: coordinateFlicker 3s infinite;
  color: var(--evidence-amber);
}

.header-coordinates.danger-corrupt {
  animation: textGlitch 0.2s infinite;
  color: #f44336;
}

.header-phrase.danger-text {
  color: #f44336;
}

@keyframes coordinateFlicker {
  0%, 95%, 100% { opacity: 0.7; }
  97% { opacity: 0.3; }
  98% { opacity: 0.9; }
}

/* State changes for flavor header during breach */
html.total-breach .flavor-header {
  border-bottom-color: rgba(255, 0, 0, 0.3) !important;
}

html.total-breach .header-batch,
html.total-breach .header-coordinates,
html.total-breach .header-phrase {
  color: #ff6666 !important;
  text-shadow: 0 0 5px rgba(255, 0, 0, 0.7) !important;
}

html.total-breach .header-batch:before {
  content: "ERROR>";
  animation: blink 0.3s infinite !important;
}

/* Environment status panel */
.environment-status {
  display: flex;
  justify-content: space-between;
  font-family: var(--font-mono);
  font-size: 0.65rem;
  margin-top: 1.5rem;
  padding: 0.8rem;
  background-color: rgba(0, 0, 0, 0.2);
  border-top: 1px solid rgba(57, 240, 217, 0.1);
  border-radius: 4px;
}

.status-label {
  color: var(--misty-gray);
  margin-right: 0.5rem;
}

.status-value {
  font-weight: bold;
}

.status-ok {
  color: var(--bioluminescent-teal);
}

.status-warning {
  color: var(--evidence-amber);
  animation: blink 2s infinite;
}

/* Mission briefing note */
.mission-note {
  font-family: var(--font-mono);
  font-size: 0.65rem;
  margin-top: 1rem;
  padding: 0.5rem;
  background-color: rgba(255, 152, 0, 0.05);
  border-left: 2px solid var(--evidence-amber);
  color: var(--misty-gray);
  letter-spacing: 0.5px;
}

.mission-label {
  color: var(--evidence-amber);
  margin-right: 0.5rem;
}

/* Biometric Scanner Styles */
.biometric-scanner {
  display: none; /* Hidden by default */
  margin-top: 1.5rem;
}

.auth-divider {
  text-align: center;
  position: relative;
  margin: 1rem 0;
}

.auth-divider::before,
.auth-divider::after {
  content: '';
  position: absolute;
  top: 50%;
  width: calc(50% - 2rem);
  height: 1px;
  background: rgba(96, 125, 139, 0.2);
}

.auth-divider::before { left: 0; }
.auth-divider::after { right: 0; }

.auth-divider span {
  background: rgba(45, 48, 51, 0.4);
  padding: 0.5rem 1rem;
  color: var(--misty-gray);
  font-size: 0.8rem;
  letter-spacing: 2px;
}

.fingerprint-scanner {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  cursor: pointer;
}

.scanner-pad {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  background: rgba(57, 240, 217, 0.05);
  position: relative;
  overflow: hidden;
  border: 1px solid rgba(57, 240, 217, 0.2);
  transition: all 0.3s ease;
}

.scan-lines {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    transparent,
    transparent 2px,
    rgba(57, 240, 217, 0.1) 2px,
    rgba(57, 240, 217, 0.1) 4px
  );
  opacity: 0;
  transition: opacity 0.3s;
}

.fingerprint-icon {
  position: absolute;
  inset: 20%;
  background: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"%3E%3Cpath fill="rgba(57, 240, 217, 0.3)" d="M12,2C6.477,2,2,6.477,2,12s4.477,10,10,10s10-4.477,10-10S17.523,2,12,2z M12,20c-4.418,0-8-3.582-8-8s3.582-8,8-8s8,3.582,8,8S16.418,20,12,20z M12,6c-3.314,0-6,2.686-6,6s2.686,6,6,6s6-2.686,6-6S15.314,6,12,6z M12,16c-2.209,0-4-1.791-4-4s1.791-4,4-4s4,1.791,4,4S14.209,16,12,16z"%3E%3C/path%3E%3C/svg%3E');
  opacity: 0.5;
}

.scanner-label {
  font-family: var(--font-mono);
  font-size: 0.7rem;
  color: var(--misty-gray);
  letter-spacing: 1px;
}

/* Scanner States */
.fingerprint-scanner.scanning .scan-lines {
  opacity: 1;
  animation: scanMove 2s linear infinite;
}

.fingerprint-scanner.scanning .scanner-pad {
  background: rgba(57, 240, 217, 0.1);
  box-shadow: 0 0 15px rgba(57, 240, 217, 0.2);
}

.fingerprint-scanner.processing .scanner-pad {
  background: rgba(255, 152, 0, 0.1);
  border-color: rgba(255, 152, 0, 0.2);
  animation: pulse 1s infinite;
}

.fingerprint-scanner.scan-error .scanner-pad {
  background: rgba(244, 67, 54, 0.1);
  border-color: rgba(244, 67, 54, 0.2);
  box-shadow: 0 0 15px rgba(244, 67, 54, 0.2);
}

.fingerprint-scanner.scan-error[data-security-level="normal"] .scanner-pad {
  border-color: var(--bioluminescent-teal);
  box-shadow: 0 0 15px var(--bioluminescent-teal);
}

.fingerprint-scanner.scan-error[data-security-level="warning"] .scanner-pad {
  border-color: var(--evidence-amber);
  box-shadow: 0 0 15px var(--evidence-amber);
}

.fingerprint-scanner.scan-error[data-security-level="danger"] .scanner-pad {
  border-color: var(--bioluminescent-teal);
  box-shadow: 0 0 20px var(--bioluminescent-teal);
}

.fingerprint-scanner.scan-error[data-security-level="normal"] .scanner-pad {
  background: rgba(244, 67, 54, 0.1);
  border-color: rgba(244, 67, 54, 0.2);
  box-shadow: 0 0 15px rgba(244, 67, 54, 0.2);
  animation: scanPulseNormal 2s infinite;
}

.fingerprint-scanner.scan-error[data-security-level="warning"] .scanner-pad {
  background: rgba(255, 193, 7, 0.1);
  border-color: rgba(255, 193, 7, 0.2);
  box-shadow: 0 0 15px rgba(255, 193, 7, 0.2);
  animation: scanPulseWarning 1.5s infinite;
}

.fingerprint-scanner.scan-error[data-security-level="danger"] .scanner-pad {
  background: rgba(255, 0, 0, 0.15);
  border-color: rgba(255, 0, 0, 0.3);
  box-shadow: 0 0 20px rgba(255, 0, 0, 0.3);
  animation: scanPulseDanger 0.8s infinite;
}

@keyframes scanPulseNormal {
  0% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.05); opacity: 0.8; }
  100% { transform: scale(1); opacity: 1; }
}

@keyframes scanPulseWarning {
  0% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.1); opacity: 0.7; }
  100% { transform: scale(1); opacity: 1; }
}

@keyframes scanPulseDanger {
  0% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.15); opacity: 0.6; }
  100% { transform: scale(1); opacity: 1; }
}

/* Show scanner only on mobile */
@media (max-width: 768px) {
  .biometric-scanner.mobile-only {
    display: block;
  }
}

/* Move credentials link below form elements */
.form-footer {
  margin-top: 1rem;
  text-align: center;
  font-size: 0.85rem;
}

/* Thermal hint styling */
.thermal-hints {
  position: fixed;
  inset: 0;
  pointer-events: none;
  z-index: 1000;
}

.thermal-hint {
  position: absolute;
  font-family: var(--font-mono);
  font-size: 0.7rem;
  color: var(--bioluminescent-teal);
  padding: 0.5rem;
  border-radius: 4px;
  opacity: 0;
  transition: opacity 0.3s ease;
  background: rgba(57, 240, 217, 0.05);
  border: 1px solid rgba(57, 240, 217, 0.1);
  pointer-events: none;
}

/* Show hints when mouse (thermal scanner) is nearby */
.thermal-hint:hover,
.thermal-hint:hover ~ .thermal-cursor {
  opacity: 0.8;
}

/* Enhance thermal cursor for hint detection */
.thermal-cursor:hover ~ .thermal-hints .thermal-hint {
  opacity: 0.8;
  animation: hintGlow 2s infinite;
}

@keyframes hintGlow {
  0%, 100% { box-shadow: 0 0 10px rgba(57, 240, 217, 0.2); }
  50% { box-shadow: 0 0 20px rgba(57, 240, 217, 0.4); }
}

.auth-success .glass-panel {
  border-color: var(--bioluminescent-teal);
  box-shadow: 
    0 4px 30px rgba(57, 240, 217, 0.3),
    0 0 50px rgba(57, 240, 217, 0.2),
    inset 0 0 15px rgba(57, 240, 217, 0.1);
  animation: successPanel 3s forwards;
}

@keyframes successPulse {
  0%, 100% { opacity: 0.8; }
  50% { opacity: 1; }
}

@keyframes successPanel {
  0% { transform: scale(1); }
  50% { transform: scale(1.02); }
  100% { transform: scale(1.5); opacity: 0; }
}

/* Add error flash animation */
.error-flash {
  animation: errorPulse 0.6s;
}

@keyframes errorPulse {
  0%, 100% { box-shadow: none; }
  50% { box-shadow: 0 0 8px #f44336; }
}

/* Aptitude Test Styles */
.aptitude-test-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.9);
  backdrop-filter: blur(10px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
  opacity: 0;
  transition: opacity 0.5s ease;
  pointer-events: none;
}

.aptitude-test-container.hidden {
  display: none !important;
}

.aptitude-test-container.active {
  opacity: 1;
  pointer-events: all;
}

.aptitude-panel {
  width: 90%;
  max-width: 700px;
  max-height: 90vh;
  overflow-y: auto;
  z-index: 10000;
}

.aptitude-test-container.active::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 5px;
  background-color: var(--bioluminescent-teal);
  z-index: 10001;
  animation: pulse 1.5s infinite;
}

/* Aptitude Test Styles */
.aptitude-test-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.9);
  backdrop-filter: blur(8px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999; /* Ensure it's above everything */
  pointer-events: none; /* Initially no interaction */
}

.aptitude-test-container.hidden {
  display: none !important;
}

.aptitude-test-container.active {
  opacity: 1;
  pointer-events: all; /* Enable interaction when active */
}

.test-section {
  display: none;
}

.test-section.active {
  display: block;
}

/* Test Header */
.test-header {
  margin-bottom: 2rem;
}

.test-header h2 {
  font-family: var(--font-heading);
  color: var(--bioluminescent-teal);
  text-align: center;
  font-size: 1.8rem;
  margin-bottom: 1rem;
  letter-spacing: 1px;
}

/* Test Progress Bar */
.test-progress {
  margin-bottom: 2rem;
}

.progress-bar {
  height: 6px;
  background: rgba(45, 48, 51, 0.6);
  border-radius: 3px;
  margin-bottom: 0.5rem;
  overflow: hidden;
}

.progress-fill {
  height: 100%;
  width: 33.33%;
  background: var(--bioluminescent-teal);
  box-shadow: 0 0 10px var(--bioluminescent-teal);
  transition: width 0.5s cubic-bezier(0.2, 0.8, 0.2, 1);
}

.progress-label {
  font-family: var(--font-mono);
  font-size: 0.7rem;
  color: var(--misty-gray);
  text-align: right;
}

/* Test Sections */
.test-section {
  display: none;
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.5s ease, transform 0.5s ease;
}

.test-section.active {
  display: block;
  animation: fadeInUp 0.5s forwards;
}

.test-section h3 {
  font-family: var(--font-heading);
  color: #fff;
  font-size: 1.2rem;
  margin-bottom: 1rem;
  letter-spacing: 0.5px;
}

.test-instruction {
  font-family: var(--font-body);
  color: var(--misty-gray);
  margin-bottom: 2rem;
  font-size: 0.9rem;
  padding: 0.75rem;
  border: 1px solid rgba(57, 240, 217, 0.1);
  background: rgba(57, 240, 217, 0.05);
  border-radius: 4px;
}

/* Pattern Recognition Test */
.pattern-sequence {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin: 2rem 0;
  background: rgba(45, 48, 51, 0.4);
  padding: 1.5rem;
  border-radius: 6px;
  border: 1px solid rgba(57, 240, 217, 0.15);
}

.pattern-item {
  font-size: 2.5rem;
  color: var(--bioluminescent-teal);
  text-align: center;
  min-width: 60px;
  animation: subtle-glow 2s infinite alternate;
  font-family: var(--font-mono);
}

.pattern-question {
  font-size: 3rem;
  color: var(--evidence-amber);
  animation: blink 1.5s infinite;
  font-weight: bold;
}

.pattern-options {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1rem;
  margin-top: 2rem;
}

.pattern-option {
  padding: 1rem;
  font-size: 2rem;
  color: var(--bioluminescent-teal);
  background: rgba(45, 48, 51, 0.4);
  border: 1px solid rgba(57, 240, 217, 0.15);
  border-radius: 6px;
  text-align: center;
  cursor: pointer;
  transition: all 0.3s ease;
}

.pattern-option:hover {
  background: rgba(57, 240, 217, 0.05);
  border-color: var(--bioluminescent-teal);
  box-shadow: 0 0 20px rgba(57, 240, 217, 0.2);
}

.pattern-option.selected {
  background: rgba(57, 240, 217, 0.1);
  border-color: var(--bioluminescent-teal);
  box-shadow: 0 0 25px rgba(57, 240, 217, 0.25);
}

/* Memory Test */
.memory-map {
  position: relative;
  width: 100%;
  padding-top: 100%;
  margin: 2rem 0;
  background: rgba(45, 48, 51, 0.4);
  border: 1px solid rgba(57, 240, 217, 0.15);
  border-radius: 6px;
  overflow: hidden;
}

.map-grid {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(4, 1fr);
  gap: 1px;
  background: rgba(57, 240, 217, 0.1);
}

.map-grid::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    linear-gradient(rgba(57, 240, 217, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(57, 240, 217, 0.1) 1px, transparent 1px);
  background-size: calc(100% / 4) calc(100% / 4);
  z-index: 1;
}

.map-marker {
  position: absolute;
  width: 20px;
  height: 20px;
  background: var(--evidence-amber);
  border-radius: 50%;
  box-shadow: 0 0 10px var(--evidence-amber);
  transform: translate(-50%, -50%);
  z-index: 2;
  animation: pulse 1.5s infinite;
}

.map-marker[data-location="A3"] {
  top: 12.5%;
  left: 62.5%;
}

.map-marker[data-location="C1"] {
  top: 62.5%;
  left: 12.5%;
}

.map-marker[data-location="D4"] {
  top: 87.5%;
  left: 87.5%;
}

.map-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(45, 48, 51, 0.95);
  z-index: 10;
  opacity: 0;
  transition: opacity 0.5s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: var(--font-mono);
  font-size: 2rem;
  color: var(--bioluminescent-teal);
}

.map-overlay.visible {
  opacity: 1;
}

.memory-recall {
  margin-top: 1rem;
}

.memory-recall.hidden {
  display: none;
}

.memory-recall p {
  margin-bottom: 1rem;
  color: var(--misty-gray);
  font-family: var(--font-body);
}

.recall-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 0.5rem;
}

.recall-cell {
  aspect-ratio: 1;
  background: rgba(45, 48, 51, 0.6);
  border: 1px solid rgba(57, 240, 217, 0.1);
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
}

.recall-cell:hover {
  background: rgba(57, 240, 217, 0.05);
  border-color: rgba(57, 240, 217, 0.3);
}

.recall-cell.selected {
  background: rgba(57, 240, 217, 0.1);
  border-color: var(--bioluminescent-teal);
  box-shadow: 0 0 10px rgba(57, 240, 217, 0.2);
}

.recall-cell.selected::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 10px;
  height: 10px;
  background: var(--bioluminescent-teal);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  box-shadow: 0 0 5px var(--bioluminescent-teal);
}

/* Reaction Test */
.reaction-arena {
  width: 100%;
  height: 300px;
  position: relative;
  margin: 2rem 0;
  background: rgba(45, 48, 51, 0.4);
  border: 1px solid rgba(57, 240, 217, 0.15);
  border-radius: 6px;
  overflow: hidden;
}

.capture-counter {
  position: absolute;
  top: 10px;
  right: 10px;
  padding: 0.5rem 0.75rem;
  background: rgba(0, 0, 0, 0.6);
  border: 1px solid rgba(57, 240, 217, 0.2);
  border-radius: 4px;
  font-family: var(--font-mono);
  font-size: 0.8rem;
  color: var(--bioluminescent-teal);
  z-index: 20;
}

.cryptid-target {
  position: absolute;
  width: 40px;
  height: 30px;
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 30"><path d="M10,20 C15,5 25,5 30,20 C25,12 15,12 10,20 Z" fill="%2339F0D9" fill-opacity="0.6" /></svg>');
  cursor: pointer;
  transform-origin: center;
  transition: all 0.2s ease;
  opacity: 0;
  z-index: 10;
}

.cryptid-target.visible {
  opacity: 1;
  animation: fadeInTarget 0.3s ease-out;
}

.cryptid-target.captured {
  transform: scale(1.5);
  opacity: 0;
  animation: captureEffect 0.5s ease-out;
}

/* Results Section */
.results-section {
  text-align: center;
}

.results-panel {
  background: rgba(45, 48, 51, 0.4);
  border: 1px solid rgba(57, 240, 217, 0.2);
  border-radius: 6px;
  padding: 3rem 2rem;
  margin: 2rem 0;
  position: relative;
  overflow: hidden;
}

.result-icon {
  font-size: 4rem;
  color: var(--bioluminescent-teal);
  margin-bottom: 1rem;
  text-shadow: 0 0 20px var(--bioluminescent-teal);
  animation: successPulse 2s infinite;
}

.results-panel h4 {
  font-family: var(--font-heading);
  color: #fff;
  font-size: 1.5rem;
  margin-bottom: 1rem;
  letter-spacing: 1px;
}

.security-clearance {
  display: inline-block;
  margin-top: 1.5rem;
  padding: 0.5rem 1rem;
  background: rgba(0, 0, 0, 0.3);
  border: 1px solid var(--bioluminescent-teal);
  border-radius: 4px;
}

.clearance-label {
  font-family: var(--font-mono);
  font-size: 0.8rem;
  color: var(--misty-gray);
  margin-right: 0.5rem;
}

.clearance-value {
  font-family: var(--font-mono);
  font-size: 1.2rem;
  color: var(--bioluminescent-teal);
  font-weight: bold;
  animation: glow 1.5s infinite alternate;
}

.scan-effect {
  position: absolute;
  top: 0;
  left: -100%;
  width: 200%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(57, 240, 217, 0.1), transparent);
  animation: scanEffect 2s linear infinite;
  z-index: 1;
  pointer-events: none;
}

.completion-message {
  color: var(--misty-gray);
  line-height: 1.7;
  margin-top: 2rem;
  font-family: var(--font-body);
}

.completion-message p:last-child {
  margin-top: 1rem;
  color: var(--bioluminescent-teal);
  animation: pulse 2s infinite;
}

/* Test Navigation */
.test-navigation {
  margin-top: 1.5rem;
  text-align: center;
}

/* Animations */
@keyframes subtle-glow {
  0% { opacity: 0.7; }
  100% { opacity: 1; }
}

@keyframes scanEffect {
  0% { transform: translateX(0); }
  100% { transform: translateX(50%); }
}

@keyframes fadeInTarget {
  0% { opacity: 0; transform: scale(0.5); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes captureEffect {
  0% { opacity: 1; transform: scale(1); }
  50% { opacity: 0.8; transform: scale(1.2); box-shadow: 0 0 20px var(--bioluminescent-teal); }
  100% { opacity: 0; transform: scale(1.5); }
}

@keyframes glow {
  0% { text-shadow: 0 0 5px var(--bioluminescent-teal); }
  100% { text-shadow: 0 0 15px var(--bioluminescent-teal); }
}
